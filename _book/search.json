[{"path":"index.html","id":"welcome-to-startr","chapter":"1 Welcome to StartR","heading":"1 Welcome to StartR","text":"StartR short course someone wants beginner’s guide using R RStudio. resource suitable anyone wants gentle self-paced introduction.\nFigure 1.1: R just sound pirate makes, also programming language.\n","code":""},{"path":"index.html","id":"what-is-r-and-rstudio","chapter":"1 Welcome to StartR","heading":"1.1 What is R and RStudio?","text":"R programming language statistical computing data visualisation (see https://www.r-project.org/.html). language, write set instructions operations someone follow.example, ask :hope enjoyed looking window moment . come back later, basic logic behind code writing series instructions.using R, ’ll giving instructions computer follow complete.R thing RStudio. RStudio integrated development environment (IDE). provides user-friendly interface add instructions view output.Think difference R RStudio way car dashboard engine. engine car works background unless ’re mechanic, just work away background without much notice. seated car dashboard hand direct drive car. RStudio drive whilst R (coding language hood) engine underneath. book show drive understand engine works, really necessary become mechanic, just good driver!","code":"`stand up` and then,\n`walk towards the window` and then,\n`return to your seat`"},{"path":"index.html","id":"installing-r-and-rstudio","chapter":"1 Welcome to StartR","heading":"1.2 Installing R and RStudio","text":"installation need car dashboard engine. install two things:R (engine)RStudio (car dashboard)can install .","code":""},{"path":"index.html","id":"opening-rstudio","chapter":"1 Welcome to StartR","heading":"1.3 Opening RStudio","text":"installed , open RStudio.Find RStudio computer open . RStudio logo shown Figure 1.2. frequent mistake opening engine R, use RStudio.\nFigure 1.2: Look RStudio logo.\nopen RStudio look like screenshot Figure 1.3. Notice three main panels.\nFigure 1.3: RStudio first opened.\nreally dive getting RStudio work, need open new script. , look top left button looks like blank white page green/white plus symbol, just like Figure 1.4 .\nFigure 1.4: Open new R Script.\nopen new script now see four panels just like Figure 1.5.\nFigure 1.5: see four panels now means ready start working RStudio.\nAnother way open new script use menu top RStudio window: File > New File > R Script.","code":""},{"path":"index.html","id":"a-quick-tour-of-rstudio","chapter":"1 Welcome to StartR","heading":"1.4 A Quick Tour of RStudio","text":"Now time learn four panels. Let’s go one one. four panels shown Figure 1.6 description .\nFigure 1.6: four panels RStudio.\nScript PanelThis top left panel. editable space able type edit code use. good news can save R script can use future.Think input panel.Console PanelThe bottom left panel console. Whilst can technically type code , ’d advise wont able save code. console can view output messages. Essentially, type run code script, RStudio respond via console panel.Think output panel.Environment PanelThis top right panel. space RStudio hold objects. Essentially bit like memory space RStudio keep hold important information ask .Think memory panel.Output PanelThe bottom right panel bit trickier name. call output panel ultimately can jobs. might notice different tabs. Plots see data visualisation outputs, plots. Packages provides list packages (later). Help also useful tab space read R Documentation (instructions use bits code). also files tab can allow navigate files computer.","code":""},{"path":"index.html","id":"chapter-summary","chapter":"1 Welcome to StartR","heading":"1.5 Chapter Summary","text":"end chapter installed R RStudio. also opened RStudio created new script can see four panels.Take moments little look around four panels familiar look like next chapter.","code":""},{"path":"putting-r-to-work.html","id":"putting-r-to-work","chapter":"2 Putting R to Work","heading":"2 Putting R to Work","text":"chapter start using code putting RStudio work! begin basic code become familiar layout entering code works.","code":""},{"path":"putting-r-to-work.html","id":"what-day-is-it-today","chapter":"2 Putting R to Work","heading":"2.1 What Day is it Today?","text":"Let’s begin something really simple.RStudio open want make sure four panels, top left panel (script) open ready. can type code.Type code script now.typed code, ready run . means ask RStudio tell today’s date.run code can leave cursor end line code use keyboard press Control + Enter Command + Enter Mac. might also notice top right script panel button called run. also run line code ’d recommend getting used using keyboard.run line code, take look console (bottom left panel). worked see today’s date:Congratulations! entered world coding.Well, else can RStudio ? can helpful also think script panel fancy calculator. mind, let’s try maths sums. Run following code:ran successfully see answer appear console (bottom left panel).Next, try really complex sum:Note need use * asterisk signify multiplication sum. Run line code check answer. case needed know answer 12345 x 54321, RStudio !Hopefully now starting see basics input code RStudio check see output.","code":"\ndate()\ndate()\n#> [1] \"Wed Apr  9 12:33:22 2025\"\n20+80\n12345*54321"},{"path":"putting-r-to-work.html","id":"functions-and-arguments-a-piece-of-pi","chapter":"2 Putting R to Work","heading":"2.2 Functions and Arguments: A Piece of Pi","text":"previous section, ran bit code function called date(). R, function bit code performs specific task. Functions parentheses () end, example date() function returns current date time.argument piece information pass function, change way function behaves. Let’s look example.code use function called round(). Within function (inside parentheses) can enter argument. ’ve entered mathematical constant pi argument.function round() pi π entered argument (inside parentheses) just round value nearest whole number. Try RStudio now.However, wanted output two-decimal places? problem! Simply add another argument. functions contain multiple arguments, now let’s keep simple.Run code check console see output.use , comma separate arguments within parentheses. argument digits = 2 can used change behaviour function rounding pi π two decimal places. argument give function specific guidance.advance R code ’ll using lots different functions arguments.point want learn function, can use ?. Try running code :ran successfully notice output panel (bottom right) help tab now showing documentation explain function works, including possible arguments.can use ? time see function works.","code":"\nround(3.14159265359)\n#> [1] 3\nround(pi) # or you can just type `pi`\n#> [1] 3\nround(3.14159265359, digits = 2)\n?round()"},{"path":"putting-r-to-work.html","id":"comments-human-notes","chapter":"2 Putting R to Work","heading":"2.3 Comments = Human Notes","text":"might little worried eventually going remember much code. base version R contains thousands functions, even start using packages! (packages later). One concern people code needing remember everything.deal issue, writing code, use comments R script. comment piece text can add next code note. like think comments “human notes”, can read RStudio ignore .order tell RStudio human notes begin need use # hashtag. Anything written hashtag processed read RStudio. Check example :Rstudio run functions notes benefit. use notes routinely writing code two important reasons:help remind code works look future.help remind code works look future.send share code someone else, notes can help understand ’ve done .send share code someone else, notes can help understand ’ve done .Therefore, first important rule:Always make use comments coding RStudio (#)moving next section, head back RStudio practice adding notes R script. Remember use # hashtag. ’ve finished writing notes, hit enter script moves next line ready next bit code.","code":"\ndate() #this will ask for today's date\n\nround(3.14159265359, digits = 2) #this rounds a value to two decimal places"},{"path":"putting-r-to-work.html","id":"creating-objects","chapter":"2 Putting R to Work","heading":"2.4 Creating Objects","text":"Another important feature knowing create object. Variables /data can assigned objects, however, need create object . Let’s look example. Run code :Let’s talk code step step:might notice created object called myobject (truly inspirational name). left line code. can call object anything like, feel free call something else.might notice created object called myobject (truly inspirational name). left line code. can call object anything like, feel free call something else.Next used arrow <-. means anything written right hand side arrow committed object. arrow called assignment operator.Next used arrow <-. means anything written right hand side arrow committed object. arrow called assignment operator.used c() function allows us list values. created mini data set numbers 1-4.used c() function allows us list values. created mini data set numbers 1-4.Go ahead haven’t already run bit code, nothing particularly thrilling happen may notice console return anything exciting. However, take look environment panel (top right) notice?worked, spot object called myobject (whatever called ) shown Figure 2.1.\nFigure 2.1: environment contains new object called myobject.\nR world:Everything exists object.Everything exists object.Everything happens function.Everything happens function.Almost anything can committed object RStudio. example, run adapt code . Change “Luke” name! check environment looks like Figure 2.2.\nFigure 2.2: environment contains multiple new objects.\ncan also print object console. Essentially ask RStudio just show contents object console. try print() function, see .","code":"\nmyobject <- c(1, 2, 3, 4)\nname <- \"Luke\"\nanswer <- 12345*54321\npi <- round(3.14159265359, digits = 2)\nprint(myobject)\nprint(name)\nprint(answer)\nprint(pi)"},{"path":"putting-r-to-work.html","id":"naming-and-removing-objects","chapter":"2 Putting R to Work","heading":"2.4.1 Naming and Removing Objects","text":"say can call object anything like. One thing help try keep object names short. often might need keep typing object names, particularly use object frequently (e.g., object contains data set analysis).Generally, avoid using multiple words keep short informative.Finally, want remove object environment can use code :","code":"\nwhat_is_my_first_name <- \"Luke\" # this is not a good object name. it is too long.\nname <- \"Luke\" # this is a short informative object name\nrm(myobject, name, answer, pi) # will remove these four objects.\n\nrm(list = ls()) # will remove EVERYTHING from the environment."},{"path":"putting-r-to-work.html","id":"troubleshooting-and-getting-help-with-r","chapter":"2 Putting R to Work","heading":"2.5 Troubleshooting and Getting Help with R","text":"early stages learning code uncommon come across error messages. Sometimes code work can frustrating. Also, error messages little tricky interpret. Thankfully options support troubleshoot issues.Firstly, remember use ? front function check documentation ensure using correctly. wanted learn rm() function previous section use:Secondly, come across error message figure /looks load gibberish, copy paste error message Google. likely someone else experienced error probably solution already online.Finally, one common issues learning code presence typo. code RStudio needs written specifically expects written. RStudio work make typo. Similarly, R code case sensitive. myobject MYOBJECT mYobject.Take time check code carefully starting R, errors tend small typos.Therefore, second important rule:Check code typos enter exactly R expects","code":"\n?rm()"},{"path":"putting-r-to-work.html","id":"chapter-summary-1","chapter":"2 Putting R to Work","heading":"2.6 Chapter Summary","text":"now understanding functions arguments work. also ran first lines code! Congratulations, officially R coder. also now able create objects, name appropriately, remove environment. Finally, aware two key rules: (1) use comments make notes code (2) enter code exactly intended check typos. next chapter begin work packages learn import data set RStudio ready data analysis.","code":""},{"path":"packages-and-importing-data.html","id":"packages-and-importing-data","chapter":"3 Packages and Importing Data","heading":"3 Packages and Importing Data","text":"chapter cover two important features RStudio. Firstly use packages. Packages allow access variety different functions. Additionally, begin working data need somehow actually get data RStudio via working directory.","code":""},{"path":"packages-and-importing-data.html","id":"what-are-packages","chapter":"3 Packages and Importing Data","heading":"3.1 What are Packages?","text":"first open RStudio, access many base R functions. fact great deal functions exist base version R. fact, already used previous chapter, example, date() round() considered base R functions.Base R essentially “basic subscription” version RStudio without additional apps installed.Often might need quite specialised functions. order access need install load packages. can think packages bit like mobile phone apps…need download , install , open access specific functions.One key package required learning using R Psychology Royal Holloway tidyverse package. Tidyverse essentially collection packages, see .","code":""},{"path":"packages-and-importing-data.html","id":"installing-a-package","chapter":"3 Packages and Importing Data","heading":"3.1.1 Installing a Package","text":"Tidyverse already installed Royal Holloway campus computers step necessary. still worth read future may need install packages beyond tidyverse.install tidyverse can use install.packages() function. See :Note ’ll see also followed advice used human notes hashtag #.’ll notice name package needs quotation marks. run line code, RStudio get work installing package. might take couple minutes see happening console (bottom left panel).","code":"\ninstall.packages(\"tidyverse\") # install the tidyverse package"},{"path":"packages-and-importing-data.html","id":"loading-a-package","chapter":"3 Packages and Importing Data","heading":"3.1.2 Loading a Package","text":"Just installed package yet mean ready use . Next need load . can use library() function :Note need use quote marks.Remember, need install package computer. However, time reopen RStudio (whether home campus PC), ’ll need load necessary libraries using library() function.","code":"\nlibrary(tidyverse) # load the tidyverse package"},{"path":"packages-and-importing-data.html","id":"checking-packages","chapter":"3 Packages and Importing Data","heading":"3.1.3 Checking Packages","text":"can check packages installed loaded anytime. Head “packages” tab bottom right panel. package listed installed. tick box left, also means package loaded ready go! try un-tick tick tidyverse panel see happens console. See Figure 3.1 .\nFigure 3.1: example packages tab Tidyverse package loaded.\n","code":""},{"path":"packages-and-importing-data.html","id":"importing-data","chapter":"3 Packages and Importing Data","heading":"3.2 Importing Data","text":"Now Tidyverse loaded, can begin thinking importing data. different way import data, might actually notice Import Dataset environment panel. However, best way import data via Working Directory using Tidyverse function called read_csv. Let’s go bit bit.","code":""},{"path":"packages-and-importing-data.html","id":"set-the-working-directory","chapter":"3 Packages and Importing Data","heading":"3.2.1 Set the Working Directory","text":"working directory folder computer RStudio look find data files. also RStudio can save output files .setting working directory important think file structure computer. example, might consider creating special folder save RStudio work. can link special folder RStudio using steps .Head Session tab top RStudio window select Set Working Directory -> Choose Directory. See Figure 3.2 .\nFigure 3.2: Set working directory\nopen file browser computer. Select folder computer designated Working Directory. one Figure 3.3 called R_Folder might call something else like, example, StartR. ’ll notice folder selected empty new folder nothing …yet!\nFigure 3.3: Head folder use working directory session\ncase forget, can check working directory point using line code:see console (bottom left) RStudio tell location folder computer now designated working directory.","code":"\ngetwd() # will check the current working directory."},{"path":"packages-and-importing-data.html","id":"importing-data-1","chapter":"3 Packages and Importing Data","heading":"3.2.2 Importing Data","text":"RStudio primarily likes work file format called .csv. stands comma separated values. ways import types files (e.g., SPSS, excel, text) course work .csv files.Let’s try get basic data set RStudio. Download data set remember save designated working directory folder. reference, data also presented .Download data setA table ten people containing age (years) height (cm).","code":""},{"path":"packages-and-importing-data.html","id":"read_csv","chapter":"3 Packages and Importing Data","heading":"3.2.3 read_csv()","text":"data file working directory folder can try import using read_csv().line code begins combine everything covered StartR short course far. Take moment ro work explanations ensure understand:data object. called data just short 4 letter word data set.data object. called data just short 4 letter word data set.<- assignment operator. assign things right side object left side called data.<- assignment operator. assign things right side object left side called data.read_csv() function read data .csv file.read_csv() function read data .csv file.\"height.csv\" argument tells function behave. case look specific file called height.csv.\"height.csv\" argument tells function behave. case look specific file called height.csv.look file working directory.look file working directory.works successfully see object called data environment panel (top right), see Figure 3.4.works successfully see object called data environment panel (top right), see Figure 3.4.Notice “height.csv” spelled exactly match file name. capital letters spaces, appeared downloaded .Notice “height.csv” spelled exactly match file name. capital letters spaces, appeared downloaded .\nFigure 3.4: environment panel newly created data object\nmight also notice basic information visible right object environment. example, 10 obs. 3 variables. tells us 10 observations across three different variables.Finally, double click object name data, open data file new tab.can also achieve result using:final note read_csv().might learn similar function called read.csv (dot . underscore _). use read.csv. Always use version underscore, comes tidyverse package.","code":"\ndata <- read_csv(\"height.csv\") # import the height.csv data set and save it as an object called `data`.\nview(data) # will open the data in a new tab"},{"path":"packages-and-importing-data.html","id":"some-very-basic-descriptive-statistics","chapter":"3 Packages and Importing Data","heading":"3.2.4 Some (very) Basic Descriptive Statistics","text":"final part chapter, calculate basic descriptive statistics. wanted minimise “stats” stuff short course aim really learn RStudio layout works properly work data.However, code allow practice little understanding R functions, running code, reading output.need new package final section:work basic descriptive statistics data file. Using psych package, use:Run now check output. first line might notice id (identification number) mean 5.50. meaningless actually remove ID column. ?","code":"\ninstall.packages(\"psych\") # install Psych package\nlibrary(psych) # load the psych package\ndescribe(data) # produce descriptive statistics"},{"path":"packages-and-importing-data.html","id":"using-the-pipe-operator","chapter":"3 Packages and Importing Data","heading":"3.2.5 Using the Pipe Operator","text":"remember right start chapter one used example three step command:data actually want following also three step command:can use something called pipe operator %>% essentially means “”. happen next write set instructions, line line. Take look code run :three lines following:Take object data ……Take object data ……Use select() remove id. adding minus sign - id…thenUse select() remove id. adding minus sign - id…thendescribe() results.describe() results.Hopefully can now see console new output id column removed.also see mean age 30 years (SD = 9.64) mean height 167.70 centimeters (SD = 9.25).Congratulations! successfully produced descriptive statistics.","code":"`stand up` and then,\n`walk towards the window` and then,\n`return to your seat`use `data` and then,\n`remove id column` and then,\n`describe` it.\ndata %>%\n  select(-id) %>%\n  describe()"},{"path":"packages-and-importing-data.html","id":"chapter-summary-2","chapter":"3 Packages and Importing Data","heading":"3.3 Chapter Summary","text":"chapter learnt packages can us. might come across several different packages future now know install packages load . Another important task able set working directory. folder computer RStudio use find data files. Next, successfully imported data file using read_csv(). Finally, use code produce simple descriptive statistics.","code":""}]
